name: Deploy IBM Compute Node

on:
  workflow_dispatch:  # Only manual triggers

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init and Apply
      run: |
        cd terraform
        terraform init
        terraform apply -auto-approve -var="ibmcloud_api_key=${{ secrets.IBM_CLOUD_API_KEY }}"

    - name: Get com3 IP
      id: terraform
      run: |
        cd terraform
        terraform output com3_private_ip > ip.txt
        COM3_IP=$(grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+' ip.txt | head -1)
        echo "COM3_IP=$COM3_IP" >> $GITHUB_ENV
        echo "Com3 IP: $COM3_IP"

    - name: Wait for com3 to be ready
      run: |
        echo "Waiting for com3 to be fully provisioned..."
        sleep 120

    - name: Setup SSH for head node access
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -H 141.125.159.109 >> ~/.ssh/known_hosts

    - name: Configure com3 via head node
      run: |
        echo "Configuring com3 at $COM3_IP via head node"
        
        # SSH to head node and run configuration script there
        ssh -i ~/.ssh/id_ed25519 clusteradmin@141.125.159.109 "bash -s" << 'HEAD_SCRIPT'
          COM3_IP='$COM3_IP'
          echo "Configuring com3 at \$COM3_IP from head node..."
          
          # First, let's check what SSH access we have to com3
          echo "Testing SSH access to com3..."
          
          # Try different SSH keys and users
          for key in /root/.ssh/id_rsa /home/clusteradmin/.ssh/id_ed25519; do
            if [ -f "\$key" ]; then
              echo "Trying key: \$key"
              ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -i "\$key" root@\$COM3_IP "echo 'Success with key: \$key'" && break
            fi
          done
          
          # If we can't connect, show error and exit
          if ! ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 root@\$COM3_IP "echo 'Connected'"; then
            echo "❌ Cannot connect to com3 at \$COM3_IP"
            echo "Available SSH keys on head node:"
            find /root/.ssh /home/clusteradmin/.ssh -name "*.pub" 2>/dev/null || echo "No SSH keys found"
            echo "Manual steps required:"
            echo "1. Check IBM Cloud console for com3 instance"
            echo "2. Ensure SSH key is properly attached"
            echo "3. Try manual connection: ssh root@\$COM3_IP"
            exit 1
          fi
          
          echo "✅ Connected to com3, starting configuration..."
          
          # Basic user setup
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "adduser clusteradmin"
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "echo '!Super@4' | passwd --stdin clusteradmin"
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "dnf install sudo -y"
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "usermod -aG wheel clusteradmin"
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "echo 'clusteradmin ALL=(ALL) NOPASSWD:ALL' | tee /etc/sudoers.d/clusteradmin"
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "chmod 440 /etc/sudoers.d/clusteradmin"
          
          # Add head node SSH key
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "mkdir -p /home/clusteradmin/.ssh"
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "echo 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJCCsrtROumtINmCBKvVHkd8gEK3d2CXmprcp97PIN0v clusteradmin@head' > /home/clusteradmin/.ssh/authorized_keys"
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "chmod 700 /home/clusteradmin/.ssh"
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "chmod 600 /home/clusteradmin/.ssh/authorized_keys"
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "chown -R clusteradmin:clusteradmin /home/clusteradmin/.ssh"
          
          # Setup NFS
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "dnf install nfs-utils -y"
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "mount -t nfs 10.242.64.4:/home /home"
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "echo '10.242.64.4:/home /home nfs defaults 0 0' >> /etc/fstab"
          ssh -o StrictHostKeyChecking=no root@\$COM3_IP "setsebool -P use_nfs_home_dirs 1"
          
          echo "✅ com3 configuration completed!"
HEAD_SCRIPT

    - name: Update Ansible inventory
      run: |
        echo "Updating Ansible inventory with com3 at $COM3_IP"
        
        cat > ansible/inventory.yml << INVENTORY
---
all:
  vars:
    ansible_user: clusteradmin
    ansible_ssh_private_key_file: ~/.ssh/id_ed25519
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    cluster_user: clusteradmin
    head_node_ip: 10.242.64.4
    nfs_export_path: /home
    timezone: "UTC"
    cluster_network: "10.242.64.0/24"
    nfs_server: "head"
    mount_point: "/home"

  children:
    head_node:
      hosts:
        head:
          ansible_host: 10.242.64.4
          node_type: head

    compute:
      hosts:
        com1:
          ansible_host: 10.242.64.5
          node_type: compute
        com2:
          ansible_host: 10.242.64.6
          node_type: compute
        com3:
          ansible_host: $COM3_IP
          node_type: compute

    cluster:
      hosts:
        head:
        com1:
        com2:
        com3:
INVENTORY

    - name: Display completion message
      run: |
        echo "=========================================="
        echo "✅ IBM CLOUD DEPLOYMENT COMPLETE"
        echo "=========================================="
        echo "com3 node: $COM3_IP"
        echo "User: clusteradmin"
        echo "Password: !Super@4"
        echo "NFS: Mounted /home from head node"
        echo ""
        echo "To connect: ssh clusteradmin@$COM3_IP"
        echo "=========================================="
